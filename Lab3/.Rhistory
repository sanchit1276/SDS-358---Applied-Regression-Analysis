setwd("~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab3")
#### Here is the R script you will use:  (remember that # indicates a comment) ####
##Lab 3: Simple Regression, Inference
library(SDSRegressionR)
library(tidyverse)
intel <- read_csv("data/intelligence.csv")
View(intel)
View(intel)
#Scale MRI to something OK....
fivenum(intel$MRIcount)
intel <- intel %>%
mutate(mri_100 = MRIcount / 100000)
#Define variables that might be of interest
vars <- c("PIQ", "mri_100", "Weight", "Height")
#New way to get basic descriptives:
library(psych)
describe(select(intel, one_of(vars)), IQR = TRUE)
#Take an intial look at the variables (including PIQ and MRI)
library(psych)
corr.test(select(intel, one_of(vars)))$r
#Check linearity
simpleScatter(intel, mri_100, PIQ, line=TRUE)
#Run the intial model
iq <- lm(PIQ ~ mri_100, data=intel)
summary(iq)
#Look for outliers
threeOuts(iq, key.variable = "SubjectID")
cooksPlot(iq, key.variable = "SubjectID", print.obs = TRUE)
#Remove the offending outlier
intel_noout <- intel %>%
filter(SubjectID %not in% c(23))
#Re-run the model
iq2 <- lm(PIQ ~ mri_100, data=intel_noout)
summary(iq2)
#Grab confidence intervals
confint(iq2)
#Predict new MRI of 1,000,000
nw_mri <- data.frame(mri_100 = 10)
predict(iq2, nw_mri, interval="prediction")
library(car)
linearHypothesis(iq2, "mri_100 = 10.00")
install.packages("car")
library(car)
linearHypothesis(iq2, "mri_100 = 10.00")
#### Here is the R script you will use:  (remember that # indicates a comment) ####
##Lab 3: Simple Regression, Inference
library(SDSRegressionR)
library(tidyverse)
intel <- read_csv("data/Resilience.csv")
View(intel)
View(intel)
#### Here is the R script you will use:  (remember that # indicates a comment) ####
##Lab 3: Simple Regression, Inference
library(SDSRegressionR)
library(tidyverse)
res <- read_csv("data/Resilience.csv")
#Subset the data
basic <- res %>%
filter(Group != "Basic Sciences")
View(basic)
res <- read_csv("data/Resilience.csv")
#Subset the data
basic <- res %>%
filter(Group = "Basic Sciences")
#Subset the data
basic <- res %>%
filter(Group == "Basic Sciences")
View(basic)
corr.test(select(basic, basic$DREEM.A.SP, basic$MS.QoL))$r
-----------
#Take an intial look at the variables
library(psych)
corr.test(select(basic, basic$DREEM.A.SP, basic$MS.QoL))$r
corr.test(select(basic, basic$DREEM.A.SP, basic$MS.QoL),use="pairwise.complete.obs")
corr.test(select(basic, basic.DREEM.A.SP, basic.MS.QoL),use="pairwise.complete.obs")
corr.test(select(basic, DREEM.A.SP, MS.QoL),use="pairwise.complete.obs")
corr.test(select(basic, DREEM.A.SP, MS.QoL),use="pairwise.complete.obs")$r
corr.test(select(basic, MS.QoL,DREEM.A.SP),use="pairwise.complete.obs")$r
#Check linearity
simpleScatter(basic, MS.QoL,DREEM.A.SP,line=TRUE)
#Run the intial model
iq <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(iq)
summary(iq)
View(basic)
#Look for outliers
threeOuts(iq, key.variable = "IDR")
cooksPlot(iq, key.variable = "IDR", print.obs = TRUE)
cooksPlot(iq, key.variable = "IDR", print.obs = TRUE)
cooksPlot(iq, key.variable = "IDR", print.obs = TRUE)
View(basic)
#Remove the offending outlier
basic_noout <- basic %>%
filter(IDR %not in% c(IDR1058))
#Remove the offending outlier
basic_noout <- basic %>%
filter("IDR" %not in% c(IDR1058))
View(basic)
#Remove the offending outlier
intel_noout <- intel %>%
filter(IDR %not in% c("IDR1058"))
#Remove the offending outlier
basic_noout <- basic %>%
filter(IDR %not in% c("IDR1058"))
#Re-run the model
mod2 <- lm(MS.QoL ~ DREEM.A.SP, data=basic_noout)
summary(mod2)
#Grab confidence intervals
confint(mod2)
clear
clr
#### Here is the R script you will use:  (remember that # indicates a comment) ####
##Lab 3: Simple Regression, Inference
library(SDSRegressionR)
library(tidyverse)
res <- read_csv("data/Resilience.csv")
#Subset the data
basic <- res %>%
filter(Group == "Basic Sciences")
-----------
#Take an intial look at the variables
library(psych)
corr.test(select(basic, MS.QoL,DREEM.A.SP),use="pairwise.complete.obs")$r
#Check linearity
simpleScatter(basic, MS.QoL,DREEM.A.SP,line=TRUE)
#Run the intial model
mod <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(mod)
#Look for outliers
threeOuts(mod, key.variable = "IDR")
cooksPlot(mod, key.variable = "IDR", print.obs = TRUE)
#Remove the offending outlier
basic_noout <- basic %>%
filter(IDR %not in% c("IDR1058"))
#Re-run the model
mod2 <- lm(MS.QoL ~ DREEM.A.SP, data=basic_noout)
summary(mod2)
#Grab confidence intervals
confint(mod2)
#Test the additional questions
library(car)
linearHypothesis(iq2, "mri_100 = 10.00")
#Predict new MRI of 1,000,000
nw_mri <- data.frame(mri_100 = 10)
predict(iq2, nw_mri, interval="prediction")
library(car)
linearHypothesis(iq2, "mri_100 = 10.00")
#### Here is the R script you will use:  (remember that # indicates a comment) ####
##Lab 3: Simple Regression, Inference
library(SDSRegressionR)
library(tidyverse)
res <- read_csv("data/Resilience.csv")
#Subset the data
basic <- res %>%
filter(Group == "Basic Sciences")
-----------
#Take an intial look at the variables
library(psych)
corr.test(select(basic, MS.QoL,DREEM.A.SP),use="pairwise.complete.obs")$r
#Check linearity
simpleScatter(basic, MS.QoL,DREEM.A.SP,line=TRUE)
#Run the intial model
mod <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(mod)
#Look for outliers
threeOuts(mod, key.variable = "IDR")
cooksPlot(mod, key.variable = "IDR", print.obs = TRUE)
#Remove the offending outlier
basic_noout <- basic %>%
filter(IDR %not in% c("IDR1058"))
#Re-run the model
mod2 <- lm(MS.QoL ~ DREEM.A.SP, data=basic_noout)
summary(mod2)
#Grab confidence intervals
confint(mod2)
#### Here is the R script you will use:  (remember that # indicates a comment) ####
##Lab 3: Simple Regression, Inference
library(SDSRegressionR)
library(tidyverse)
res <- read_csv("data/Resilience.csv")
#Subset the data
basic <- res %>%
filter(Group == "Basic Sciences")
-----------
#Take an intial look at the variables
library(psych)
corr.test(select(basic, MS.QoL,DREEM.A.SP),use="pairwise.complete.obs")$r
#Check linearity
simpleScatter(basic, MS.QoL,DREEM.A.SP,line=TRUE)
#Run the intial model
mod <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(mod)
#Look for outliers
threeOuts(mod, key.variable = "IDR")
cooksPlot(mod, key.variable = "IDR", print.obs = TRUE)
#Remove the offending outlier
basic_noout <- basic %>%
filter(IDR %not in% c("IDR1058"))
#Re-run the model
mod2 <- lm(MS.QoL ~ DREEM.A.SP, data=basic_noout)
summary(mod2)
#Grab confidence intervals
confint(mod2)
#Grab confidence intervals
confint(mod2, level = 0.95)
library(car)
linearHypothesis(mod2, "DREEM.A.SP=10")
nw_sp <- data.frame(DREEM.A.SP=10)
predict(mod2, nw_sp, interval="prediction")
#Check linearity
simpleScatter(basic, MS.QoL,DREEM.A.SP,line=TRUE)
#Check linearity
simpleScatter(basic, DREEM.A.SP,MS.QoL,,line=TRUE)
linearHypothesis(mod2, "DREEM.A.SP=0.175")
source('~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab3/Lab3_SLR_Inference.R')
#### Here is the R script you will use:  (remember that # indicates a comment) ####
##Lab 3: Simple Regression, Inference
library(SDSRegressionR)
library(tidyverse)
res <- read_csv("data/Resilience.csv")
#Subset the data
basic <- res %>%
filter(Group == "Basic Sciences")
-----------
#Take an intial look at the variables
library(psych)
corr.test(select(basic, MS.QoL,DREEM.A.SP),use="pairwise.complete.obs")$r
#Check linearity
simpleScatter(basic, DREEM.A.SP,MS.QoL,line=TRUE)
#Run the intial model
mod <- lm(MS.QoL ~ DREEM.A.SP, data=basic)
summary(mod)
#Look for outliers
threeOuts(mod, key.variable = "IDR")
cooksPlot(mod, key.variable = "IDR", print.obs = TRUE)
#Remove the offending outlier
basic_noout <- basic %>%
filter(IDR %not in% c("IDR1058"))
#Re-run the model
mod2 <- lm(MS.QoL ~ DREEM.A.SP, data=basic_noout)
summary(mod2)
#Grab confidence intervals
confint(mod2)
#additional questions
library(car)
nw_sp <- data.frame(DREEM.A.SP=10)
predict(mod2, nw_sp, interval="prediction")
linearHypothesis(mod2, "DREEM.A.SP=0.175")
linearHypothesis(mod2, "DREEM.A.SP=10")
0.175
linearHypothesis(mod2, "DREEM.A.SP=0.175")
