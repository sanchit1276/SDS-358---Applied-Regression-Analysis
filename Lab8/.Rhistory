setwd("~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab8")
library(SDSRegressionR)
#Load Data
vit <- read_csv("data/VitaminD.csv")
#Run first model for diagnostics FIRST
#First run
v_mod <- lm(D25 ~ D125 + ageyears + bmi + pth + bmi*ageyears + pth*ageyears, data=vit)
summary(v_mod)
#Diagnostics
library(car)
vif(v_mod)
residFitted(v_mod)
cooksPlot(v_mod, key.variable = "PartID", print.obs=TRUE, sort.obs=TRUE)
#Remove bad outlier(s)
g_vit <- vit %>%
filter(PartID %not in% c("ID178"))
#Re-run
v_mod2 <- lm(D25 ~ D125 + ageyears + bmi + pth + bmi*ageyears + pth*ageyears, data=g_vit)
summary(v_mod2)
#Find the Simple Slope locations (Pick-a-Point)
m_data <- modelData(v_mod2)
mean(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) - sd(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) + sd(m_data$ageyears, na.rm=TRUE)
#lsmeans for simple slopes
library(emmeans)
simple_mns <- emmeans(v_mod2, "bmi",
at=list(bmi=c(0,1), ageyears=c(8.18, 9.84, 11.50)),
by="ageyears")
simple_mns
pairs(simple_mns, reverse=TRUE)
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
install.packages("lmROS")
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
#Install our custom class package
install.packages("devtools") #if needed...
devtools::install_github("MichaelJMahometa/SDSRegressionR")
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
library(SDSRegressionR)
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
install.packages("devtools") #if needed...
install.packages("devtools")
devtools::install_github("MichaelJMahometa/SDSRegressionR")
library(SDSRegressionR)
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
pairs(simple_mns, reverse=TRUE)
#Better graphs
#ROS
ROS +
labs(x="Age in Years", title="ROS of Age", subtitle="BMI predicting D25 Serum")
#Simple Slopes
mns <- summary(emmeans(v_mod2, "bmi",
at=list(bmi=seq(10, 30, 2), ageyears=c(8.18, 9.84, 11.50)),
by="ageyears"))
#### Here is the R script you will use:  (remember that # indicates a comment) ####
#Lab8: Quantitative Interaction
install.packages("devtools") #if needed...
devtools::install_github("MichaelJMahometa/SDSRegressionR")
install.packages("devtools")
library(SDSRegressionR)
#Load Data
vit <- read_csv("data/VitaminD.csv")
names(vit)
#Any categorical variables? No
#Run first model for diagnostics FIRST
#First run
v_mod <- lm(D25 ~ D125 + ageyears + bmi + pth + bmi*ageyears + pth*ageyears, data=vit)
summary(v_mod)
#Diagnostics
library(car)
vif(v_mod)
residFitted(v_mod)
cooksPlot(v_mod, key.variable = "PartID", print.obs=TRUE, sort.obs=TRUE)
#Remove bad outlier(s)
g_vit <- vit %>%
filter(PartID %not in% c("ID178"))
#Re-run
v_mod2 <- lm(D25 ~ D125 + ageyears + bmi + pth + bmi*ageyears + pth*ageyears, data=g_vit)
summary(v_mod2)
#Find the Simple Slope locations (Pick-a-Point)
m_data <- modelData(v_mod2)
mean(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) - sd(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) + sd(m_data$ageyears, na.rm=TRUE)
#lsmeans for simple slopes
library(emmeans)
simple_mns <- emmeans(v_mod2, "bmi",
at=list(bmi=c(0,1), ageyears=c(8.18, 9.84, 11.50)),
by="ageyears")
simple_mns
pairs(simple_mns, reverse=TRUE)
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
#Better graphs
#ROS
ROS +
labs(x="Age in Years", title="ROS of Age", subtitle="BMI predicting D25 Serum")
#Simple Slopes
mns <- summary(emmeans(v_mod2, "bmi",
at=list(bmi=seq(10, 30, 2), ageyears=c(8.18, 9.84, 11.50)),
by="ageyears"))
simpleScatter(g_vit, x=bmi, y=D25, ptalpha = 0,
title="BMI on D25 Moderated by Age") +
geom_line(data=mns, aes(x=bmi, y=emmean, linetype=factor(ageyears))) +
scale_linetype_manual(name = "Age Values",
values = c("dashed", "dotdash", "dotted"),
labels = c("One SD Below","Mean of Age", "One SD Above"))
#More fun from the R community!
library(jtools)
sim_slopes(v_mod2, pred = "bmi", modx = "ageyears")
johnson_neyman(v_mod2, pred = "bmi", modx = "ageyears")
interact_plot(v_mod2, pred = "bmi", modx = "ageyears")
devtools::install_github("MichaelJMahometa/SDSRegressionR")
library(SDSRegressionR)
#Load Data
vit <- read_csv("data/VitaminD.csv")
names(vit)
#Any categorical variables? No
#Run first model for diagnostics FIRST
#First run
v_mod <- lm(D25 ~ D125 + ageyears + bmi + pth + bmi*ageyears + pth*ageyears, data=vit)
summary(v_mod)
#Diagnostics
library(car)
vif(v_mod)
residFitted(v_mod)
cooksPlot(v_mod, key.variable = "PartID", print.obs=TRUE, sort.obs=TRUE)
#Remove bad outlier(s)
g_vit <- vit %>%
filter(PartID %not in% c("ID178"))
#Re-run
v_mod2 <- lm(D25 ~ D125 + ageyears + bmi + pth + bmi*ageyears + pth*ageyears, data=g_vit)
summary(v_mod2)
#Find the Simple Slope locations (Pick-a-Point)
m_data <- modelData(v_mod2)
mean(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) - sd(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) + sd(m_data$ageyears, na.rm=TRUE)
#lsmeans for simple slopes
library(emmeans)
simple_mns <- emmeans(v_mod2, "bmi",
at=list(bmi=c(0,1), ageyears=c(8.18, 9.84, 11.50)),
by="ageyears")
simple_mns
pairs(simple_mns, reverse=TRUE)
# And Find the Regions of Significance
lmROS(v_mod2, interest = "bmi", moderator = "ageyears")
#Better graphs
#ROS
ROS +
labs(x="Age in Years", title="ROS of Age", subtitle="BMI predicting D25 Serum")
#Simple Slopes
mns <- summary(emmeans(v_mod2, "bmi",
at=list(bmi=seq(10, 30, 2), ageyears=c(8.18, 9.84, 11.50)),
by="ageyears"))
simpleScatter(g_vit, x=bmi, y=D25, ptalpha = 0,
title="BMI on D25 Moderated by Age") +
geom_line(data=mns, aes(x=bmi, y=emmean, linetype=factor(ageyears))) +
scale_linetype_manual(name = "Age Values",
values = c("dashed", "dotdash", "dotted"),
labels = c("One SD Below","Mean of Age", "One SD Above"))
#More fun from the R community!
library(jtools)
sim_slopes(v_mod2, pred = "bmi", modx = "ageyears")
johnson_neyman(v_mod2, pred = "bmi", modx = "ageyears")
interact_plot(v_mod2, pred = "bmi", modx = "ageyears")
install.packages("jtools")
source('~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab8/Lab8_QuantInteraction.R', echo=TRUE)
sim_slopes(v_mod2, pred = "bmi", modx = "ageyears")
#More fun from the R community!
library(jtools)
sim_slopes(v_mod2, pred = "bmi", modx = "ageyears")
ss$slopes
ss <- sim_slopes(v_mod2, pred = "bmi", modx = "ageyears")
ss$slopes
johnson_neyman(v_mod2, pred = "bmi", modx = "ageyears")
interact_plot(v_mod2, pred = "bmi", modx = "ageyears")
interact_plot(v_mod2, pred = "bmi", modx = "ageyears", plot.points = TRUE)
ss <- sim_slopes(v_mod2, pred = "bmi", modx = "ageyears")
sim_slopes(v_mod2, pred = "bmi", modx = "ageyears")
johnson_neyman(v_mod2, pred = "bmi", modx = "ageyears")
library(SDSRegressionR)
#Load Data
conn <- read_csv("data/connected")
setwd("~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab8")
library(SDSRegressionR)
#Load Data
conn <- read_csv("data/connected")
#Load Data
conn <- read_csv("data/connected.csv")
#Load Data
conn <- read_csv("data/connected.csv")
names(conn)
View(conn)
#Run first model for diagnostics
#First run
mod1 <- lm(Problem.Beh ~ age + female + School.Connectedness + Family.Connectedness + Depressive.Sympt+School.Connectedness*Depressive.Sympt, data=conn)
summary(mod1)
#Diagnostics
library(car)
vif(mod1)
vif(mod1)
residFitted(mod1)
cooksPlot(mod1, key.variable = "STUD_ID", print.obs=TRUE, sort.obs=TRUE)
cooksPlot(mod1, key.variable = "STUD_ID", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
cooksCutOff * 2
#Remove bad outlier(s)
g_conn <- conn %>%
filter(STUD_ID %not in% c("SID192","SID134"))
#Re-run
mod2 <- lm(Problem.Beh ~ age + female + School.Connectedness + Family.Connectedness + Depressive.Sympt+School.Connectedness*Depressive.Sympt, data=g_conn)
summary(mod2)
summary(mod2)
summary(mod2)
summary(mod2)
#Find the Simple Slope locations (Pick-a-Point)
m_data <- modelData(mod2)
mean(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) - sd(m_data$ageyears, na.rm=TRUE)
mean(m_data$ageyears, na.rm=TRUE) + sd(m_data$ageyears, na.rm=TRUE)
#Find the Simple Slope locations (Pick-a-Point)
m_data <- modelData(mod2)
mean(m_data$School.Connectedness , na.rm=TRUE)
sd(m_data$School.Connectedness , na.rm=TRUE)
summary(mod2)
mean(m_data$School.Connectedness , na.rm=TRUE)
sd(m_data$School.Connectedness , na.rm=TRUE)
mean(m_data$School.Connectedness , na.rm=TRUE) - sd(m_data$School.Connectedness , na.rm=TRUE)
mean(m_data$School.Connectedness , na.rm=TRUE) + sd(m_data$School.Connectedness , na.rm=TRUE)
#lsmeans for simple slopes
library(emmeans)
simple_mns <- emmeans(v_mod2, "Depressive.Sympt",
at=list(Depressive.Sympt=c(0,1), School.Connectedness=c(2.68678,4.409509, 6.132239)),
by="School.Connectedness")
simple_mns <- emmeans(mod2, "Depressive.Sympt",
at=list(Depressive.Sympt=c(0,1), School.Connectedness=c(2.68678,4.409509, 6.132239)),
by="School.Connectedness")
simple_mns
pairs(simple_mns, reverse=TRUE)
# And Find the Regions of Significance
lmROS(mod2, interest = "Depressive.Sympt", moderator = "School.Connectedness")
#Double-check work
library(jtools)
sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss <- sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss$slopes
johnson_neyman(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
interact_plot(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness", plot.points = TRUE)
# And Find the Regions of Significance
lmROS(mod2, interest = "Depressive.Sympt", moderator = "School.Connectedness")
install.packages("SDSRegressionR")
# And Find the Regions of Significance
lmROS(mod2, interest = "Depressive.Sympt", moderator = "School.Connectedness")
library("SDSRegressionR", lib.loc="~/R/win-library/3.5")
library(SDSRegressionR)
# And Find the Regions of Significance
lmROS(mod2, interest = "Depressive.Sympt", moderator = "School.Connectedness")
#Double-check work
library(jtools)
sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss <- sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss$slopes
johnson_neyman(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
interact_plot(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness", plot.points = TRUE)
johnson_neyman(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
#Lab8: Quantitative Interaction
library(SDSRegressionR)
#Load Data
conn <- read_csv("data/connected.csv")
names(conn)
#Run first model for diagnostics
#First run
mod1 <- lm(Problem.Beh ~ age + female + School.Connectedness + Family.Connectedness + Depressive.Sympt+School.Connectedness*Depressive.Sympt, data=conn)
summary(mod1)
#Diagnostics
library(car)
vif(mod1)
residFitted(mod1)
cooksPlot(mod1, key.variable = "STUD_ID", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
cooksCutOff * 2
#Remove bad outlier(s)
g_conn <- conn %>%
filter(STUD_ID %not in% c("SID192","SID134"))
#Re-run
mod2 <- lm(Problem.Beh ~ age + female + School.Connectedness + Family.Connectedness + Depressive.Sympt+School.Connectedness*Depressive.Sympt, data=g_conn)
summary(mod2)
#Find the Simple Slope locations (Pick-a-Point)
m_data <- modelData(mod2)
mean(m_data$School.Connectedness, na.rm=TRUE)
sd(m_data$School.Connectedness, na.rm=TRUE)
mean(m_data$School.Connectedness, na.rm=TRUE) - sd(m_data$School.Connectedness, na.rm=TRUE)
mean(m_data$School.Connectedness, na.rm=TRUE) + sd(m_data$School.Connectedness, na.rm=TRUE)
#lsmeans for simple slopes
library(emmeans)
simple_mns <- emmeans(mod2, "Depressive.Sympt",
at=list(Depressive.Sympt=c(0,1), School.Connectedness=c(2.68678,4.409509, 6.132239)),
by="School.Connectedness")
simple_mns
pairs(simple_mns, reverse=TRUE)
# And Find the Regions of Significance
lmROS(mod2, interest = "Depressive.Sympt", moderator = "School.Connectedness")
#Double-check work
library(jtools)
sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss <- sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss$slopes
johnson_neyman(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
interact_plot(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness", plot.points = TRUE)
johnson_neyman(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
interact_plot(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness", plot.points = TRUE)
#Lab8: Quantitative Interaction
library(SDSRegressionR)
#Load Data
conn <- read_csv("data/connected.csv")
names(conn)
#Run first model for diagnostics
#First run
mod1 <- lm(Problem.Beh ~ age + female + School.Connectedness + Family.Connectedness + Depressive.Sympt+School.Connectedness*Depressive.Sympt, data=conn)
summary(mod1)
#Diagnostics
library(car)
vif(mod1)
residFitted(mod1)
cooksPlot(mod1, key.variable = "STUD_ID", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
cooksCutOff * 2
#Remove bad outlier(s)
g_conn <- conn %>%
filter(STUD_ID %not in% c("SID192","SID134"))
#Re-run
mod2 <- lm(Problem.Beh ~ age + female + School.Connectedness + Family.Connectedness + Depressive.Sympt+School.Connectedness*Depressive.Sympt, data=g_conn)
summary(mod2)
#Find the Simple Slope locations (Pick-a-Point)
m_data <- modelData(mod2)
mean(m_data$School.Connectedness, na.rm=TRUE)
sd(m_data$School.Connectedness, na.rm=TRUE)
mean(m_data$School.Connectedness, na.rm=TRUE) - sd(m_data$School.Connectedness, na.rm=TRUE)
mean(m_data$School.Connectedness, na.rm=TRUE) + sd(m_data$School.Connectedness, na.rm=TRUE)
#lsmeans for simple slopes
library(emmeans)
simple_mns <- emmeans(mod2, "Depressive.Sympt",
at=list(Depressive.Sympt=c(0,1), School.Connectedness=c(2.68678,4.409509, 6.132239)),
by="School.Connectedness")
simple_mns
pairs(simple_mns, reverse=TRUE)
# Regions of Significance
johnson_neyman(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
#Double-check work
library(jtools)
sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss <- sim_slopes(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness")
ss$slopes
interact_plot(mod2, pred = "Depressive.Sympt", modx = "School.Connectedness", plot.points = TRUE)
