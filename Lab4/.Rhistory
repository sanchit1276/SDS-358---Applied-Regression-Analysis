setwd("~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab4")
#### Here is the R script you will use:  (remember that # indicates a comment) ####
#Lab4: Multiple Linear Regression
library(SDSRegressionR)
library(tidyverse)
#import data...
clinical <- read_csv("data/Clinical.csv")
names(clinical)
#Inital correlationss
vars <- c("MS.QoL", "DREEM.S.SP", "DREEM.A.SP", "Resilience", "BDI", "Age")
library(psych)
corr.test(select(clinical, one_of(vars)))
#First model
q_mod <- lm(MS.QoL ~ DREEM.S.SP + DREEM.A.SP + Resilience + BDI + Age, data=clinical)
summary(q_mod)
library(car)
vif(q_mod)
1/vif(q_mod)
1-1/vif(q_mod)
#Good model: Check assumptions
residFitted(q_mod2)
#Find the outliers...
cooksPlot(q_mod2, key.variable = "IDR", print.obs = TRUE, sort.obs = TRUE)
threeOuts(q_mod2, key.variable = "IDR")
#Remove the outlier(s)
good_clin <- clinical %>%
filter(IDR %not in% c("IDR897"))
#Final Model
q_mod_f <- lm(MS.QoL ~ DREEM.S.SP + Resilience + BDI + Age, data=good_clin)
summary(q_mod_f)
residFitted(q_mod_f) #Just checking
residFitted(q_mod_f) #Just checking
confint(q_mod_f) #Confidence intervals for the slopes (for reporting)
lmBeta(q_mod_f) #Standardized Betas for our final model
pCorr(q_mod_f) #Partial and Part correlation coefficients
#Predict
library(emmeans)
ref_grid(q_mod_f)
install.packages("emmeans")
#Predict
library(emmeans)
ref_grid(q_mod_f)
emmeans(q_mod_f, "DREEM.S.SP", at=list(DREEM.S.SP=10))
#Visualize...
#Get the graph....
s.sp_gr <- simpleScatter(good_clin, DREEM.S.SP, MS.QoL,
title="Social Perception and Quality of Life",
xlab="DREEM Social Self Perception", ylab="Quality of Life")
#Visualize...
#Get the graph....
s.sp_gr <- simpleScatter(good_clin, DREEM.S.SP, MS.QoL,
title="Social Perception and Quality of Life",
xlab="DREEM Social Self Perception", ylab="Quality of Life")
s.sp_gr
pgr <- summary(emmeans(q_mod_f, "DREEM.S.SP", at=list(DREEM.S.SP=seq(8, 26, 0.5))))
pgr
#Add fit and confidence
s.sp_gr +
geom_line(data=pgr, aes(x=DREEM.S.SP, y=lsmean), color="red") +
geom_ribbon(data=pgr, aes(x=DREEM.S.SP, y=lsmean, ymin=lower.CL, ymax=upper.CL), alpha=0.3)
#Add fit and confidence
s.sp_gr +
geom_line(data=pgr, aes(x=DREEM.S.SP, y=emmean), color="red") +
geom_ribbon(data=pgr, aes(x=DREEM.S.SP, y=lsmean, ymin=lower.CL, ymax=upper.CL), alpha=0.3)
#Add fit and confidence
s.sp_gr +
geom_line(data=pgr, aes(x=DREEM.S.SP, y=emmean), color="red") +
geom_ribbon(data=pgr, aes(x=DREEM.S.SP, y=emmean, ymin=lower.CL, ymax=upper.CL), alpha=0.3)
#### Here is the R script you will use:  (remember that # indicates a comment) ####
#Lab4: Multiple Linear Regression
library(SDSRegressionR)
library(tidyverse)
#import data...
vitamin <- read_csv("data/VitaminD.csv")
names(vitamin)
View(vitamin)
View(vitamin)
#import data...
vit <- read_csv("data/VitaminD.csv")
names(vit)
View(vit)
names(vit)
#Inital correlationss
vars <- c("D25","ageyears", "D125", "weight", "bmi", "pth")
library(psych)
corr.test(select(vit, one_of(vars)))
#First model
q_mod <- lm(D25 ~ ageyears + D125 + weight + bmi + pth, data=vit)
summary(q_mod)
library(car)
vif(q_mod)
1-1/vif(q_mod)
#Remove the problem independent:
q_mod <- lm(D25 ~ ageyears + D125 + bmi + pth, data=vit)
#Remove the problem independent:
q_mod2 <- lm(D25 ~ ageyears + D125 + bmi + pth, data=vit)
summary(q_mod2)
vif(q_mod2)
#Good model: Check assumptions
residFitted(q_mod2)
View(vit)
#Find the outliers...
cooksPlot(q_mod2, key.variable = "PartID", print.obs = TRUE, sort.obs = TRUE)
threeOuts(q_mod2, key.variable = "PartID")
#Remove the outlier(s)
good_vit <- vit %>%
filter(PartID %not in% sc("ID178"))
#Remove the outlier(s)
good_vit <- vit %>%
filter(PartID %not in% c("ID178"))
#Final Model
q_mod_f <- lm(D25 ~ ageyears + D125 + weight + bmi + pth, data=good_vit)
summary(q_mod_f)
residFitted(q_mod_f) #Just checking
confint(q_mod_f) #Confidence intervals for the slopes (for reporting)
lmBeta(q_mod_f) #Standardized Betas for our final model
pCorr(q_mod_f) #Partial and Part correlation coefficients
#Find the outliers...
cooksPlot(q_mod2, key.variable = "PartID", print.obs = TRUE, sort.obs = TRUE)
summary(q_mod_f)
residFitted(q_mod_f) #Just checking
confint(q_mod_f) #Confidence intervals for the slopes (for reporting)
lmBeta(q_mod_f) #Standardized Betas for our final model
#### Here is the R script you will use:  (remember that # indicates a comment) ####
#Lab4: Multiple Linear Regression
library(SDSRegressionR)
library(tidyverse)
#import data...
vit <- read_csv("data/VitaminD.csv")
names(vit)
#Inital correlationss
vars <- c("D25","ageyears", "D125", "weight", "bmi", "pth")
library(psych)
corr.test(select(vit, one_of(vars)))
#First model
q_mod <- lm(D25 ~ ageyears + D125 + weight + bmi + pth, data=vit)
summary(q_mod)
library(car)
vif(q_mod)
1-1/vif(q_mod)
#Remove the problem independent:
q_mod2 <- lm(D25 ~ ageyears + D125 + bmi + pth, data=vit)
summary(q_mod2)
vif(q_mod2)
#Good model: Check assumptions
residFitted(q_mod2)
#Find the outliers...
cooksPlot(q_mod2, key.variable = "PartID", print.obs = TRUE, sort.obs = TRUE)
threeOuts(q_mod2, key.variable = "PartID")
#Remove the outlier(s)
good_vit <- vit %>%
filter(PartID %not in% c("ID178"))
#Final Model
q_mod_f <- lm(D25 ~ ageyears + D125 + weight + bmi + pth, data=good_vit)
summary(q_mod_f)
residFitted(q_mod_f) #Just checking
confint(q_mod_f) #Confidence intervals for the slopes (for reporting)
lmBeta(q_mod_f) #Standardized Betas for our final model
pCorr(q_mod_f) #Partial and Part correlation coefficients
#Predict
library(emmeans)
ref_grid(q_mod_f)
emmeans(q_mod_f, "DREEM.S.SP", at=list(DREEM.S.SP=10))
#Visualize...
#Get the graph....
s.sp_gr <- simpleScatter(good_clin, DREEM.S.SP, MS.QoL,
title="Social Perception and Quality of Life",
xlab="DREEM Social Self Perception", ylab="Quality of Life")
s.sp_gr
#New "mean" data and prediction for fit and confidence
library(psych)
describe(good_clin$DREEM.S.SP)
pgr <- summary(emmeans(q_mod_f, "DREEM.S.SP", at=list(DREEM.S.SP=seq(8, 26, 0.5))))
pgr
#Add fit and confidence
s.sp_gr +
geom_line(data=pgr, aes(x=DREEM.S.SP, y=emmean), color="red") +
geom_ribbon(data=pgr, aes(x=DREEM.S.SP, y=emmean, ymin=lower.CL, ymax=upper.CL), alpha=0.3)
#Remove the problem independent:
q_mod2 <- lm(D25 ~ ageyears + D125 + bmi + pth, data=vit)
summary(q_mod2)
#Good model: Check assumptions
residFitted(q_mod2)
#Find the outliers...
cooksPlot(q_mod2, key.variable = "PartID", print.obs = TRUE, sort.obs = TRUE)
threeOuts(q_mod2, key.variable = "PartID")
#Remove the outlier(s)
good_vit <- vit %>%
filter(PartID %not in% c("ID178"))
#Final Model
q_mod_f <- lm(D25 ~ ageyears + D125 + weight + bmi + pth, data=good_vit)
summary(q_mod_f)
lmBeta(q_mod_f) #Standardized Betas for our final model
#Final Model
q_mod_f <- lm(D25 ~ ageyears + D125 + bmi + pth, data=good_vit)
summary(q_mod_f)
residFitted(q_mod_f) #Just checking
confint(q_mod_f) #Confidence intervals for the slopes (for reporting)
lmBeta(q_mod_f) #Standardized Betas for our final model
#### Here is the R script you will use:  (remember that # indicates a comment) ####
#Lab4: Multiple Linear Regression
library(SDSRegressionR)
library(tidyverse)
#import data...
vit <- read_csv("data/VitaminD.csv")
names(vit)
#Inital correlationss
vars <- c("D25","ageyears", "D125", "weight", "bmi", "pth")
library(psych)
corr.test(select(vit, one_of(vars)))
#First model
q_mod <- lm(D25 ~ ageyears + D125 + weight + bmi + pth, data=vit)
summary(q_mod)
library(car)
vif(q_mod)
1-1/vif(q_mod)
#Remove the problem independent:
q_mod2 <- lm(D25 ~ ageyears + D125 + bmi + pth, data=vit)
summary(q_mod2)
vif(q_mod2)
#Good model: Check assumptions
residFitted(q_mod2)
#Find the outliers...
cooksPlot(q_mod2, key.variable = "PartID", print.obs = TRUE, sort.obs = TRUE)
threeOuts(q_mod2, key.variable = "PartID")
#Remove the outlier(s)
good_vit <- vit %>%
filter(PartID %not in% c("ID178"))
#Final Model
q_mod_f <- lm(D25 ~ ageyears + D125 + bmi + pth, data=good_vit)
summary(q_mod_f)
residFitted(q_mod_f) #Just checking
confint(q_mod_f) #Confidence intervals for the slopes (for reporting)
lmBeta(q_mod_f) #Standardized Betas for our final model
pCorr(q_mod_f) #Partial and Part correlation coefficients
#Predict
library(emmeans)
ref_grid(q_mod_f)
emmeans(q_mod_f, "DREEM.S.SP", at=list(pth=80))
emmeans(q_mod_f, "pth", at=list(pth=10))
emmeans(q_mod_f, "pth", at=list(pth=80))
vif(q_mod)
1-1/vif(q_mod)
