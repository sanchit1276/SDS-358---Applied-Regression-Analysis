library(SDSRegressionR)
#Load Data:
hs <- read_csv("data/hsKnowledge.csv")
names(hs)
#Full model to look for "baddness"
full <- lm(science ~ math + read + socst, data=hs)
residFitted(full)
cooksPlot(full, key.variable="id", print.obs=TRUE, sort.obs=TRUE)
threeOuts(full, key.variable="id")
#Take out the Cook's D folks:
g_hs <- hs %>%
filter(id %not in% c(150, 167))
#Run the FULL model first:
#Path B and Cprime
cprime <- lm(science ~ math + read + socst, data=g_hs)
summary(cprime)
lmBeta(cprime)
#Keep ALL the model data...
all_data <- modelData(cprime)
#Total effect model (no mediator(s))
pathc <- lm(science ~ math + socst, data=all_data)
summary(pathc)
lmBeta(pathc)
#Path A
patha <- lm(read ~ math + socst, data=all_data)
summary(patha)
lmBeta(patha)
#Indirect Effect (Multiply paths a and b - your choice how)
ind <- summary(patha)$coef["math", "Estimate"] *
summary(cprime)$coef["read", "Estimate"]
#Sobel test
se <- sqrt((summary(cprime)$coef["read", "Estimate"]^2 *
summary(patha)$coef["math", "Std. Error"]^2) +
(summary(patha)$coef["math", "Estimate"]^2 *
summary(cprime)$coef["read", "Std. Error"]^2))
z <- ind/se
z
(1 - pnorm(z)) * 2
#In practice: use a package to get the job done (with Bootstrapped CIs)
library(psych)
#NOTICE: use of our "good dataset"
med_science <- psych::mediate(science ~ math + (read) - socst, data=g_hs, n.iter = 1000)
med_science
print(med_science, short=FALSE)
#NOTICE: use of our "good dataset"
med_science <- psych::mediate(science ~ math + (read) - socst, data=g_hs, n.iter = 1000, std=TRUE)
med_science
#NOTICE: use of our "good dataset"
med_science <- psych::mediate(science ~ math + (read) - socst, data=g_hs, n.iter = 1000, std=FALSE)
med_science
print(med_science, short=FALSE)
med_science$ab
med_science$a
library(SDSRegressionR)
#Load Data:
athlete <- read_csv("data/athleteBurnout")
names(athlete)
#Load Data:
athlete <- read_csv("data/athleteBurnout.csv")
names(athlete)
#Full model to look for "baddness"
full <- lm(science ~ math + read + socst, data=hs)
#Full model to look for "baddness"
full <- lm(burnout ~ generalstress + noconfidence + performancedemand + academicrequirements, data=athlete)
residFitted(full)
cooksPlot(full, key.variable="id", print.obs=TRUE, sort.obs=TRUE)
View(athlete)
cooksPlot(full, key.variable="StudID", print.obs=TRUE, sort.obs=TRUE)
threeOuts(full, key.variable="StudID")
cooksPlot(full, key.variable="StudID", print.obs=TRUE, sort.obs=TRUE)
cooksPlot(full, key.variable="StudID", print.obs=TRUE, sort.obs=TRUE)
#Take out the Cook's D folks:
g_athlete <- athelte %>%
filter(StudID %not in% c(277))
#Take out the Cook's D folks:
g_athlete <- athlete %>%
filter(StudID %not in% c(277))
#Run the FULL model first:
#Path B and Cprime
cprime <- lm(burnout ~ generalstress + noconfidence + performancedemand + academicrequirements, data=g_athlete)
summary(cprime)
lmBeta(cprime)
#Keep ALL the model data...
all_data <- modelData(cprime)
#Total effect model (no mediator(s))
pathc <- lm(burnout ~ generalstress + performancedemand + academicrequirements, data=all_data)
summary(pathc)
#Path A
patha <- lm(noconfidence ~ generalstress + performancedemand + academicrequirements, data=all_data)
summary(patha)
summary(cprime)
summary(patha)
summary(cprime)
#Indirect Effect (Multiply paths a and b - your choice how)
ind <- summary(patha)$coef["generalstress", "Estimate"] *
summary(cprime)$coef["noconfidence", "Estimate"]
summary(cprime)
lmBeta(patha)
summary(cprime)
lmBeta(cprime)
summary(cprime)
lmBeta(cprime)
#Sobel test
se <- sqrt((summary(cprime)$coef["noconfidence", "Estimate"]^2 *
summary(patha)$coef["generalstress", "Std. Error"]^2) +
(summary(patha)$coef["generalstress", "Estimate"]^2 *
summary(cprime)$coef["noconfidence", "Std. Error"]^2))
z <- ind/se
z
(1 - pnorm(z)) * 2
#NOTICE: use of our "good dataset"
burnout <- psych::mediate(burnout ~ generalstress + (noconfidence) - performancedemand - academicrequirements, data=g_athlete, n.iter = 1000, std=FALSE)
burnout
print(burnout, short=FALSE)
#NOTICE: use of our "good dataset"
burnout <- psych::mediate(burnout ~ generalstress + (noconfidence) - performancedemand - academicrequirements, data=g_athlete, n.iter = 1000, std=FALSE)
print(burnout, short=FALSE)
burnout$a
burnout$b
burnout$c
burnout$cprime
burnout$ab
burnout_std <- psych::mediate(burnout ~ generalstress + (noconfidence) - performancedemand - academicrequirements, data=g_athlete, n.iter = 1000, std=TRUE)
#NOTICE: use of our "good dataset"
burnout <- psych::mediate(burnout ~ generalstress + (noconfidence) - performancedemand - academicrequirements, data=g_athlete, n.iter = 1000, std=FALSE)
print(burnout, short=FALSE)
summary(cprime)
burnout$cprime
print(burnout, short=FALSE)
#Lab9: Mediation Models
library(SDSRegressionR)
#Load Data:
athlete <- read_csv("data/athleteBurnout.csv")
names(athlete)
#Full model to look for "baddness"
full <- lm(burnout ~ generalstress + noconfidence + performancedemand + academicrequirements, data=athlete)
residFitted(full)
cooksPlot(full, key.variable="StudID", print.obs=TRUE, sort.obs=TRUE)
threeOuts(full, key.variable="StudID")
#Take out the Cook's D folks:
g_athlete <- athlete %>%
filter(StudID %not in% c(277))
#Run the FULL model first:
#Path B and Cprime
cprime <- lm(burnout ~ generalstress + noconfidence + performancedemand + academicrequirements, data=g_athlete)
summary(cprime)
lmBeta(cprime)
#Keep ALL the model data...
all_data <- modelData(cprime)
#Total effect model (no mediator(s))
pathc <- lm(burnout ~ generalstress + performancedemand + academicrequirements, data=all_data)
summary(pathc)
lmBeta(pathc)
#Path A
patha <- lm(noconfidence ~ generalstress + performancedemand + academicrequirements, data=all_data)
summary(patha)
lmBeta(patha)
#Indirect Effect (Multiply paths a and b - your choice how)
ind <- summary(patha)$coef["generalstress", "Estimate"] *
summary(cprime)$coef["noconfidence", "Estimate"]
#Sobel test
se <- sqrt((summary(cprime)$coef["noconfidence", "Estimate"]^2 *
summary(patha)$coef["generalstress", "Std. Error"]^2) +
(summary(patha)$coef["generalstress", "Estimate"]^2 *
summary(cprime)$coef["noconfidence", "Std. Error"]^2))
z <- ind/se
z
(1 - pnorm(z)) * 2
#Double Check Work (with Bootstrapped CIs)
library(psych)
#NOTICE: use of our "good dataset"
burnout <- psych::mediate(burnout ~ generalstress + (noconfidence) - performancedemand - academicrequirements, data=g_athlete, n.iter = 1000, std=FALSE)
print(burnout, short=FALSE)
burnout$a
burnout$b
burnout$c
burnout$cprime
burnout$ab
burnout_std <- psych::mediate(burnout ~ generalstress + (noconfidence) - performancedemand - academicrequirements, data=g_athlete, n.iter = 1000, std=TRUE)
print(burnout_std, short=FALSE)
burnout_std$a
burnout_std$b
burnout_std$c
burnout_std$cprime
burnout_std$ab
