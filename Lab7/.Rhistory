levels(sing@JobType)
levels(sing$JobType)
#Initial Model:
#Run the model (SupportServices as reference)
hap <- lm(Happiness ~ Age + Gender + JobType + Social.support +
JobType*Social.support, data=sing)
summary(hap)
#Check the diagnostics/outliers
residFitted(hap)
library(car)
vif(hap)
c <- cooksPlot(hap, key.variable="SubID", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
c
threeOuts(hap, key.variable="SubID")
c$SubID
#Get good data
g_sing <- sing %>%
filter(SubID %not in% c$SubID)
#Re-run the model:
hap2 <- lm(Happiness ~ Age + Gender + JobType + Social.support +
JobType*Social.support, data=g_sing)
summary(hap2)
#Check the overall interaction significance
library(car)
Anova(hap2, type="III")
#Simple Slopes
library(emmeans)
ref_grid(hap2)
emmeans(hap2, "Social.support", at=list(Social.support = c(0,1)), by="JobType")
job_means <- emmeans(hap2, "Social.support", at=list(Social.support = c(0,1)), by="JobType")
job_means
#Test of Simple Slopes
job_slopes <- pairs(job_means, reverse=TRUE)
job_slopes
#Test of Simple Slopes
job_slopes <- pairs(job_means, reverse=TRUE)
job_slopes
# (difference of differences -- Interaction terms)
pairs(update(job_slopes, by=NULL), reverse=TRUE, adjust="none")
library(skimr)
g_sing %>%
skim(Social.support)
#CI Plot (for fun)
library(emmeans)
mns <- summary(emmeans(hap2, "Social.support",
at=list(Social.support = seq(0,60,1)), by="JobType"))
simpleScatter(g_sing, x=Social.support, y=Happiness, ptalpha = 0,
title="Social Support and Happiness",
subtitle = "by Employment Group") +
geom_line(data=mns, aes(x=Social.support, y=emmean, color=JobType)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=JobType),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red", "green"),
#IMPORTANT: Same order below as the factor()
labels = c("SupportServices", "Academic", "Professional"))
#Or a straight ggplot...but this falls a little short...
ggplot(g_sing,aes(x=Social.support,y=Happiness,color=JobType)) +
stat_smooth(method=lm, se = FALSE, fullrange=TRUE) +
geom_point() +
labs(title="Job Type Interaction", x="Social.support", y="Happiness") +
theme_bw()
simpleScatter(g_sing, x=Social.support, y=Happiness, ptalpha = 0,
title="Social Support and Happiness",
subtitle = "by Employment Group") +
geom_line(data=mns, aes(x=Social.support, y=emmean, color=JobType)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=JobType),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red", "green"),
#IMPORTANT: Same order below as the factor()
labels = c("SupportServices", "Academic", "Professional"))
#Import data...
state <- read_csv("data/stateAnx.csv")
library(SDSRegressionR)
#Import data...
state <- read_csv("data/stateAnx.csv")
View(state)
View(state)
#Examine the categorical variable(s):
#Remember, it's good to do this for ALL categorical variables
table(state$Group)
View(state)
levels(state$Group)
#Run the Factoring for ALL categorical variables:
# (Male as Reference)
state <- state %>%
mutate(Group = factor(Job, levels=c("Basic Sciences", "Clinical Sciences")))
#Run the Factoring for ALL categorical variables:
# (Male as Reference)
state <- state %>%
mutate(Group = factor(Group, levels=c("Basic Sciences", "Clinical Sciences")))
levels(state$Group)
#Initial Model:
#Run the model (Basic Sciences as Reference)
mod1 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=state)
summary(mod1)
#Check the diagnostics/outliers
residFitted(mod1)
library(car)
vif(mod1)
View(state)
c <- cooksPlot(mod1, key.variable="IDR", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
c
threeOuts(mod1, key.variable="IDR")
c$SubID
c$IDR
c*3
cooksCutOff * 3
c
#Get good data
g_state <- state %>%
filter(IDR %not in% c("IDR932", "IDR154", "IDR1289", "IDR639", "IDR686"))
#Re-run the model:
mod2 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=stg_stateate)
#Re-run the model:
mod2 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=g_state)
summary(mod2)
#Check the overall interaction significance
library(car)
Anova(mod2, type="III")
library(SDSRegressionR)
#Import data...
state <- read_csv("data/workers.csv")
#Examine the categorical variable(s):
#Remember, it's good to do this for ALL categorical variables
table(state$Group)
#Initial Model:
#Run the model (Basic Sciences as Reference)
mod1 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=state)
summary(mod1)
library(SDSRegressionR)
View(state)
library(SDSRegressionR)
#Import data...
state <- read_csv("data/stateAnx.csv")
#Examine the categorical variable(s):
#Remember, it's good to do this for ALL categorical variables
table(state$Group)
#Run the Factoring for ALL categorical variables:
# (Basic Sciences as Reference)
state <- state %>%
mutate(Group = factor(Group, levels=c("Basic Sciences", "Clinical Sciences")))
levels(state$Group)
levels(state$Group)
#Initial Model:
#Run the model (Basic Sciences as Reference)
mod1 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=state)
summary(mod1)
#Check the diagnostics/outliers
residFitted(mod1)
library(car)
vif(mod1)
c <- cooksPlot(mod1, key.variable="IDR", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
threeOuts(mod1, key.variable="IDR")
cooksCutOff * 3
c
#Get good data
g_state <- state %>%
filter(IDR %not in% c("IDR932", "IDR154", "IDR1289", "IDR639", "IDR686"))
#Re-run the model:
mod2 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=g_state)
summary(mod2)
#Check the overall interaction significance
library(car)
Anova(mod2, type="III")
library(SDSRegressionR)
#Import data...
state <- read_csv("data/stateAnx.csv")
#Examine the categorical variable(s):
#Remember, it's good to do this for ALL categorical variables
table(state$Group)
levels(state$Group)
#Initial Model:
#Run the model (Basic Sciences as Reference)
mod1 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=state)
summary(mod1)
#Check the diagnostics/outliers
residFitted(mod1)
library(car)
vif(mod1)
c <- cooksPlot(mod1, key.variable="IDR", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
threeOuts(mod1, key.variable="IDR")
cooksCutOff * 3
c
#Get good data
g_state <- state %>%
filter(IDR %not in% c("IDR932", "IDR154", "IDR1289", "IDR639", "IDR686"))
#Re-run the model:
mod2 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=g_state)
summary(mod2)
#Check the overall interaction significance
library(car)
Anova(mod2, type="III")
library(SDSRegressionR)
#Import data...
state <- read_csv("data/stateAnx.csv")
#Examine the categorical variable(s):
#Remember, it's good to do this for ALL categorical variables
table(state$Group)
#Run the Factoring for ALL categorical variables:
# (Basic Sciences as Reference)
state <- state %>%
mutate(Group = factor(Group, levels=c("Basic Sciences", "Clinical Sciences")))
levels(state$Group)
#Initial Model:
#Run the model (Basic Sciences as Reference)
mod1 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=state)
summary(mod1)
#Check the diagnostics/outliers
residFitted(mod1)
library(car)
vif(mod1)
c <- cooksPlot(mod1, key.variable="IDR", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
threeOuts(mod1, key.variable="IDR")
cooksCutOff * 3
c
#Get good data
g_state <- state %>%
filter(IDR %not in% c("IDR932", "IDR154", "IDR1289", "IDR639", "IDR686"))
#Re-run the model:
mod2 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=g_state)
summary(mod2)
#Check the overall interaction significance
library(car)
Anova(mod2, type="III")
#Simple Slopes
library(emmeans)
ref_grid(mod2)
job_means <- emmeans(mod2, "WHOQOL.PSY", at=list(Social.support = c(0,1)), by="Group")
job_means
means <- emmeans(mod2, "WHOQOL.PSY", at=list(Social.support = c(0,1)), by="Group")
means
#Test of Simple Slopes
slopes <- pairs(means, reverse=TRUE)
slopes
# (difference of differences -- Interaction terms)
pairs(update(slopes, by=NULL), reverse=TRUE, adjust="none")
#Simple Slopes
library(emmeans)
ref_grid(mod2)
means <- emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(0,1)), by="Group")
means
#Test of Simple Slopes
slopes <- pairs(means, reverse=TRUE)
slopes
# (difference of differences -- Interaction terms)
pairs(update(slopes, by=NULL), reverse=TRUE, adjust="none")
simpleScatter(g_state, x=WHOQOL.PSY, y=State.Anxiety, ptalpha = 0,
title="PSY and Anx",
subtitle = "by Group") +
geom_line(data=mns, aes(x=WHOQOL.PSY, y=emmean, color=JobType)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=Group),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red"),
#IMPORTANT: Same order below as the factor()
labels = c("Basic", "Clinical"))
#CI Plot (for fun)
library(emmeans)
mns <- summary(emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = seq(0,60,1)), by="Group"))
simpleScatter(g_state, x=WHOQOL.PSY, y=State.Anxiety, ptalpha = 0,
title="PSY and Anx",
subtitle = "by Group") +
geom_line(data=mns, aes(x=WHOQOL.PSY, y=emmean, color=JobType)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=Group),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red"),
#IMPORTANT: Same order below as the factor()
labels = c("Basic", "Clinical"))
#CI Plot (for fun)
library(emmeans)
mns <- summary(emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = seq(0,60,1)), by="Group"))
simpleScatter(g_state, x=WHOQOL.PSY, y=State.Anxiety, ptalpha = 0,
title="PSY and Anx",
subtitle = "by Group") +
geom_line(data=mns, aes(x=WHOQOL.PSY, y=emmean, color=Group)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=Group),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red"),
#IMPORTANT: Same order below as the factor()
labels = c("Basic", "Clinical"))
#CI Plot (for fun)
library(emmeans)
mns <- summary(emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = seq(0,160,1)), by="Group"))
simpleScatter(g_state, x=WHOQOL.PSY, y=State.Anxiety, ptalpha = 0,
title="PSY and Anx",
subtitle = "by Group") +
geom_line(data=mns, aes(x=WHOQOL.PSY, y=emmean, color=Group)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=Group),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red"),
#IMPORTANT: Same order below as the factor()
labels = c("Basic", "Clinical"))
#Or a straight ggplot...but this falls a little short...
ggplot(g_sing,aes(x=Social.support,y=Happiness,color=JobType)) +
stat_smooth(method=lm, se = FALSE, fullrange=TRUE) +
geom_point() +
labs(title="Job Type Interaction", x="Social.support", y="Happiness") +
theme_bw()
#Or a straight ggplot...but this falls a little short...
ggplot(g_state,aes(x=WHOQOL.PSY,y=State.Anxiety,color=Group)) +
stat_smooth(method=lm, se = FALSE, fullrange=TRUE) +
geom_point() + theme_bw()
#Or a straight ggplot...but this falls a little short...
ggplot(g_state,aes(x=WHOQOL.PSY,y=State.Anxiety,color=Group)) +
stat_smooth(method=lm, se = FALSE, fullrange=TRUE) +
geom_point() +
labs(title="Group Interaction", x="PSY", y="Anx") +
theme_bw()
#Or a straight ggplot...but this falls a little short...
ggplot(g_state,aes(x=WHOQOL.PSY,y=State.Anxiety,color=Group)) +
stat_smooth(method=lm, se = FALSE, fullrange=TRUE) +
geom_point() +
labs(title="Group Interaction", x="WHOQOL.PSY", y="State.Anxiety") +
theme_bw()
#Lab7: Categorical Interaction
library(SDSRegressionR)
#Import data...
state <- read_csv("data/stateAnx.csv")
#Examine the categorical variable(s):
#Remember, it's good to do this for ALL categorical variables
table(state$Group)
#Run the Factoring for ALL categorical variables:
# (Basic Sciences as Reference)
state <- state %>%
mutate(Group = factor(Group, levels=c("Basic Sciences", "Clinical Sciences")))
levels(state$Group)
#Initial Model:
#Run the model (Basic Sciences as Reference)
mod1 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=state)
summary(mod1)
#Check the diagnostics/outliers
residFitted(mod1)
library(car)
vif(mod1)
c <- cooksPlot(mod1, key.variable="IDR", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
threeOuts(mod1, key.variable="IDR")
cooksCutOff * 3
c
#Get good data
g_state <- state %>%
filter(IDR %not in% c("IDR932", "IDR154", "IDR1289", "IDR639", "IDR686"))
#Re-run the model:
mod2 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=g_state)
summary(mod2)
#Check the overall interaction significance
library(car)
Anova(mod2, type="III")
#Simple Slopes
library(emmeans)
ref_grid(mod2)
means <- emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(0,1)), by="Group")
means
#Test of Simple Slopes
slopes <- pairs(means, reverse=TRUE)
slopes
# (difference of differences -- Interaction terms)
pairs(update(slopes, by=NULL), reverse=TRUE, adjust="none")
#CI Plot (for fun)
library(emmeans)
mns <- summary(emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = seq(0,160,1)), by="Group"))
simpleScatter(g_state, x=WHOQOL.PSY, y=State.Anxiety, ptalpha = 0,
title="WHOQOL.PSY and State.Anxiety",
subtitle = "by Group") +
geom_line(data=mns, aes(x=WHOQOL.PSY, y=emmean, color=Group)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=Group),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red"),
#IMPORTANT: Same order below as the factor()
labels = c("Basic", "Clinical"))
#Or a straight ggplot...but this falls a little short...
ggplot(g_state,aes(x=WHOQOL.PSY,y=State.Anxiety,color=Group)) +
stat_smooth(method=lm, se = FALSE, fullrange=TRUE) +
geom_point() +
labs(title="Group Interaction", x="WHOQOL.PSY", y="State.Anxiety") +
theme_bw()
#testing different values
#prediction at mean
ref_grid(mod2)
means <- pairs (emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = 62.625), by="Group"), reverse=TRUE)
pairs (emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = 62.625), by="Group"), reverse=TRUE)
pairs (emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(62.625), by="Group"), reverse=TRUE)
pairs (emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(62.625)), by="Group"), reverse=TRUE)
#prediction at mean
pairs(emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(62.625)), by="Group"), reverse=TRUE)
#prediction at mean
emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(62.625)), by="Group")
pairs(pred, reverse=TRUE)
#prediction at mean
pred <- emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(62.625)), by="Group")
pairs(pred, reverse=TRUE)
#prediction at mean
pred <- summary(emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = 62.625), by="Group"))
source('~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab7/Lab7_CatInteraction.R', echo=TRUE)
pred
slopes <- pairs(pred, reverse=TRUE)
slopes
slopes <- pairs(pred)
slopes
#prediction at mean
pred <- summary(emmeans(mod2, "WHOQOL.PSY", at=WHOQOL.PSY = 62.625, by="Group"))
#prediction at mean
pred <- emmeans(mod2, "WHOQOL.PSY", at=WHOQOL.PSY = 62.625, by="Group")
#prediction at mean
pred <- emmeans(mod2, "WHOQOL.PSY", at=62.625, by="Group")
pred
slopes <- pairs(pred, reverse=TRUE)
slopes
#prediction at mean
emmeans(mod2, "WHOQOL.PSY", at=62.625, by="Group")
library(SDSRegressionR)
#Import data...
state <- read_csv("data/stateAnx.csv")
library(SDSRegressionR)
#Import data...
state <- read_csv("data/stateAnx.csv")
#Examine the categorical variable(s):
#Remember, it's good to do this for ALL categorical variables
table(state$Group)
#Run the Factoring for categorical variable:
# (Basic Sciences as Reference)
state <- state %>%
mutate(Group = factor(Group, levels=c("Basic Sciences", "Clinical Sciences")))
levels(state$Group)
#Initial Model:
#Run the model (Basic Sciences as Reference)
mod1 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=state)
summary(mod1)
#Check the diagnostics/outliers
residFitted(mod1)
library(car)
vif(mod1)
c <- cooksPlot(mod1, key.variable="IDR", print.obs=TRUE, sort.obs=TRUE, save.cutoff=TRUE)
threeOuts(mod1, key.variable="IDR")
cooksCutOff * 3
c
#Get good data
g_state <- state %>%
filter(IDR %not in% c("IDR932", "IDR154", "IDR1289", "IDR639", "IDR686"))
#Re-run the model:
mod2 <- lm(State.Anxiety ~ Age + BDI + Group + WHOQOL.PSY +
Group*WHOQOL.PSY, data=g_state)
summary(mod2)
#Check the overall interaction significance
library(car)
Anova(mod2, type="III")
#Simple Slopes
library(emmeans)
ref_grid(mod2)
means <- emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(0,1)), by="Group")
means
#Test of Simple Slopes
slopes <- pairs(means, reverse=TRUE)
slopes
# (difference of differences -- Interaction terms)
pairs(update(slopes, by=NULL), reverse=TRUE, adjust="none")
#CI Plot (for fun)
library(emmeans)
mns <- summary(emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = seq(0,160,1)), by="Group"))
simpleScatter(g_state, x=WHOQOL.PSY, y=State.Anxiety, ptalpha = 0,
title="WHOQOL.PSY and State.Anxiety",
subtitle = "by Group") +
geom_line(data=mns, aes(x=WHOQOL.PSY, y=emmean, color=Group)) +
geom_ribbon(data=mns, aes(y=emmean, ymin=lower.CL, ymax=upper.CL, group=Group),
alpha=0.3) +
#Change to your group names and number of groups
scale_colour_manual(name = "Groups",
values =c("blue", "red"),
#IMPORTANT: Same order below as the factor()
labels = c("Basic", "Clinical"))
#Or a straight ggplot...but this falls a little short...
ggplot(g_state,aes(x=WHOQOL.PSY,y=State.Anxiety,color=Group)) +
stat_smooth(method=lm, se = FALSE, fullrange=TRUE) +
geom_point() +
labs(title="Group Interaction", x="WHOQOL.PSY", y="State.Anxiety") +
theme_bw()
#Mean value of Quality Life
ref_grid(mod2)
means
means <- emmeans(mod2, "Group", at=list(WHOQOL.PSY = 62.625))
means
Pairs(emmeans(mod2, "Group", at=list(WHOQOL.PSY = 62.625)), reverse=TRUE)
pairs(emmeans(mod2, "Group", at=list(WHOQOL.PSY = 62.625)), reverse=TRUE)
means <- emmeans(mod2, "WHOQOL.PSY", at=list(WHOQOL.PSY = c(0,1)), by="Group")
means
pairs(emmeans(mod2, "Group", at=list(WHOQOL.PSY = 62.625)), reverse=TRUE)
pairs(emmeans(mod2, "Group", at=list(WHOQOL.PSY = 62.625), by="WHOQOL.PSY"), reverse=TRUE)
