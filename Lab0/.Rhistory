# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
# using the package:
updateR()
#### Intro to R ####
# using the package:
updateR()
#### Intro to R ####
#Install our custom class package
install.packages("devtools") #if needed...
devtools::install_github("MichaelJMahometa/SDSRegressionR")
devtools::install_github("MichaelJMahometa/SDSRegressionR")
#A basic calculator
7 + 2
#Saving objects
object <- 7+2
object
#Working with objects
object * 2
#Vectors (single dimention of data)
rooster <- c(7,2)
rooster
rooster * 2
sum(rooster)
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
# Take a quick peek to confirm...
surv
A basic calculator
7 + 2
#Saving objects
object <- 7+2
object
#Working with objects
object * 2
#Vectors (single dimention of data)
rooster <- c(7,2)
rooster
rooster * 2
sum(rooster)
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
# Take a quick peek to confirm...
surv
#Install the helpers (if needed)
install.packages("tidyverse")
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
#Install our custom class package
install.packages("devtools") #if needed...
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
install.packages("stringi")
#Install our custom class package
install.packages("devtools") #if needed...
devtools::install_github("MichaelJMahometa/SDSRegressionR")
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
install.packages("stringi")
#Install the helpers (if needed)
install.packages("tidyverse")
#Install our custom class package
install.packages("devtools") #if needed...
devtools::install_github("MichaelJMahometa/SDSRegressionR")
library(SDSRegressionR) #"Activate" the package with the library() command
#Install the helpers (if needed)
install.packages("tidyverse")
library(tidyverse)
setwd("~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab0")
install.packages("stringi")
#A basic calculator
7 + 2
#Saving objects
object <- 7+2
object
#Working with objects
object * 2
#Vectors (single dimention of data)
rooster <- c(7,2)
rooster
#A basic calculator
7 + 2
rooster * 2
library(readr)
FirstDaySurveyData <- read_csv("data/FirstDaySurveyData.csv")
View(FirstDaySurveyData)
View(FirstDaySurveyData)
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
# Take a quick peek to confirm...
surv
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
# Take a quick peek to confirm...
surv
#Getting a vector from data
surv$Gender
pull(surv, Gender)
library(tidyverse)
pull(surv, Gender)
#Install the helpers (if needed)
install.packages("tidyverse")
library(tidyverse)
install.packages("stringi")
library(tidyverse)
#Getting a vector from data
surv$Gender
pull(surv, Gender)
pull(surv, 2)
#Select mulitple columns
select(surv, Gender, Political)
#Save the selection
small <- select(surv, UniqueID, Gender, Political)
surv <- rownames_to_column(surv, var="UniqueID")
#Save the selection
small <- select(surv, UniqueID, Gender, Political)
#Filter (subset)
men <- filter(surv, Gender=="Male")
men_dem <- filter(surv, Gender=="Male" & Political=="Democrat")
sixsix <- filter(surv, height.inches >= 66)
sixsix_fem <- filter(surv, height.inches >= 66 & Gender=="Female")
#Create new variables
surv <- mutate(surv,
Hap_cat = case_when(Happy < 75 ~ 0,
Happy >= 75 & Happy <= 100 ~ 1))
#Check
table(select(surv, Happy, Hap_cat)) #Needs factoring!
View(surv)
View(surv)
#Truncate a variable
surv <- mutate(surv, Emot = case_when(Emotional.Women == "Strongly Disagree" |
Emotional.Women == "Disagree" ~ 0,
Emotional.Women == "Strongly Agree" |
Emotional.Women == "Agree" ~ 1))
#Check
table(select(surv, Emotional.Women, Emot))
#Summarizing (Count data)
#Using dplyr notation
t <- table(select(surv, Gender))
t
#Get more information
addmargins(t)
prop.table(t)
barplot(t)
barplot(prop.table(t))
#Two way table
t2 <- table(select(surv, Gender, Emotional.Women))
t2
addmargins(t2)
prop.table(t2) #Table proportions
prop.table(t2, 1) #Row proportions
prop.table(t2, 2) #Column proportions
barplot(t2, beside=TRUE, legend=TRUE)
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
#Descriptives and Visual
mean(surv$Happy, na.rm = TRUE)
sd(surv$Happy, na.rm = TRUE)
fivenum(surv$Happy)
hist(surv$Happy)
#Descriptives and Visual
median(surv$Happy, na.rm = TRUE)
#Categorizing a new variable
surv <- mutate(surv,
Hap = case_when(Happy < 70 ~ 0,
Happy >= 70 & Happy <= 100 ~ 1))
#Table of hap
hap_table <- table(select(surv, Hap))
hap_table
#Creating a Contingency Table for two categorical variables:
t2 <- table(select(surv, Political, Hap))
t2
prop.table(hap_table)
hap_table
#Creating a Contingency Table for two categorical variables:
t2 <- table(select(surv, Political, Hap))
t2
t2
prop.table(t2, 1)
prop.table(t2, 2)
prop.table(t2, 2)
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
#Descriptives and Visual
median(surv$Happy, na.rm = TRUE)
sd(surv$Happy, na.rm = TRUE)
fivenum(surv$Happy)
hist(surv$Happy)
#Categorizing a new variable
surv <- mutate(surv,
Hap = case_when(Happy < 70 ~ 0,
Happy >= 70 & Happy <= 100 ~ 1))
#Table of hap
hap_table <- table(select(surv, Hap))
hap_table
prop.table(hap_table)
hap_table
prop.table(hap_table)
#Creating a Contingency Table for two categorical variables:
t2 <- table(select(surv, Political, Hap))
t2
prop.table(t2, 1)
prop.table(t2, 2)
prop.table(t2, 2)
#Import data with syntax
surv <- read_csv("data/FirstDaySurveyData.csv")
#Descriptives and Visual
median(surv$Happy, na.rm = TRUE)
sd(surv$Happy, na.rm = TRUE)
fivenum(surv$Happy)
hist(surv$Happy)
#Categorizing a new variable
surv <- mutate(surv,
Hap = case_when(Happy < 70 ~ 0,
Happy >= 70 & Happy <= 100 ~ 1))
#Table of hap
hap_table <- table(select(surv, Hap))
hap_table
prop.table(hap_table)
#Creating a Contingency Table for two categorical variables:
t2 <- table(select(surv, Political, Hap))
t2
prop.table(t2, 1)
prop.table(t2, 2)
