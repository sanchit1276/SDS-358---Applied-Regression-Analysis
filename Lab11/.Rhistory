geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
at=list(GLEASON = seq(0, 10, 1)), type="response"))
prostate_mns_gleason
prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
at=list(GLEASON = seq(0, 10, .1)), type="response"))
prostate_mns_gleason
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
at=list(GLEASON = seq(0, 10, .1)), type="response"))
prostate_mns_gleason
g <- simpleScatter(g_prostate, GLEASON, CAPSULE, title="CAPSULE",
xlab="GLEASON", ylab="CAPSULE probability")
g
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed")
##EXTRA
prostate_mns2 <- summary(emmeans(b_mod2, "PSA", at=list(PSA = seq(0, 160, 1)), type="response"))
mark_prob <- 0.5
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(PSA)
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
prostate_mns2 <- summary(emmeans(b_mod2, "GLEASON", at=list(GLEASON = seq(0, 10, 1)), type="response"))
mark_prob <- 0.5
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(GLEASON)
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
prostate_mns2 <- summary(emmeans(b_mod2, "GLEASON", at=list(GLEASON = seq(0, 10, .1)), type="response"))
mark_prob <- 0.5
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(GLEASON)
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed")
fifty <- prostate_mns2 %>%
filter(abs(mark_prob) == min(abs(mark_prob))) %>%
pull(PSA)
##EXTRA
prostate_mns2 <- summary(emmeans(b_mod2, "PSA", at=list(PSA = seq(0, 160, 0.001)), type="response"))
mark_prob <- 0.5
fifty <- prostate_mns2 %>%
filter(abs(mark_prob) == min(abs(mark_prob))) %>%
pull(PSA)
fifty <- prostate_mns2 %>%
filter(abs(mark_prob) == min(abs(mark_prob))) %>%
pull(PSA)
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(PSA)
mark_prob <- 0.5
fifty <- prostate_mns2 %>%
filter(abs(mark_prob) == min(abs(mark_prob))) %>%
pull(PSA)
View(prostate_mns_smk)
View(prostate_mns_smk)
#Lab11: Multiple Logistic Regression
library(SDSRegressionR)
#Bring in data
prostate <- read.csv("data/prostateData.csv", stringsAsFactors = FALSE)
names(prostate)
#Intially:
table(prostate$CAPSULE)
# #Factoring the categorical variables in the model (but NOT the outcome):
# table(birth$SMOKE)
# birth <- birth %>%
#   mutate(SMOKE_f = factor(SMOKE, levels=c(0,1),
#                           labels=c("Non-smoker", "Smoker")))
#Intital Model
b_mod <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=prostate, family="binomial")
summary(b_mod)
library(car)
vif(b_mod)
cooksPlot(b_mod, key.variable = "PatientID", print.obs = TRUE, sort.obs = TRUE, save.cutoff=TRUE)
cooksCutOff * 3
threeOuts(b_mod, key.variable = "PatientID")
#Get good data...
g_prostate <- prostate %>%
filter(PatientID %not in% c('ID_76', 'ID_89','ID_8'))
#Re-run
b_mod2 <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=g_prostate, family="binomial")
summary(b_mod2)
#Odds-ratios
exp(b_mod2$coef)
exp(confint.default(b_mod2))
#Stats
library(rms)
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
#Examine the variables of interest graphically...
#Look at ranges...
library(skimr)
g_prostate %>%
skim(PSA)
g_prostate %>%
skim(GLEASON)
library(emmeans)
prostate_mns <- summary(emmeans(b_mod2, "PSA",
at=list(PSA = seq(0, 160, 0.001)), type="response"))
library(SDSRegressionR)
#Bring in data
prostate <- read.csv("data/prostateData.csv", stringsAsFactors = FALSE)
#Lab11: Multiple Logistic Regression
library(SDSRegressionR)
#Bring in data
prostate <- read.csv("data/prostateData.csv", stringsAsFactors = FALSE)
names(prostate)
#Intially:
table(prostate$CAPSULE)
# #Factoring the categorical variables in the model (but NOT the outcome):
# table(birth$SMOKE)
# birth <- birth %>%
#   mutate(SMOKE_f = factor(SMOKE, levels=c(0,1),
#                           labels=c("Non-smoker", "Smoker")))
#Intital Model
b_mod <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=prostate, family="binomial")
summary(b_mod)
library(car)
vif(b_mod)
cooksPlot(b_mod, key.variable = "PatientID", print.obs = TRUE, sort.obs = TRUE, save.cutoff=TRUE)
cooksCutOff * 3
threeOuts(b_mod, key.variable = "PatientID")
#Get good data...
g_prostate <- prostate %>%
filter(PatientID %not in% c('ID_76', 'ID_89','ID_8'))
#Re-run
b_mod2 <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=g_prostate, family="binomial")
summary(b_mod2)
#Odds-ratios
exp(b_mod2$coef)
exp(confint.default(b_mod2))
#Stats
library(rms)
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
#Examine the variables of interest graphically...
#Look at ranges...
library(skimr)
g_prostate %>%
skim(PSA)
g_prostate %>%
skim(GLEASON)
library(emmeans)
prostate_mns <- summary(emmeans(b_mod2, "PSA",
at=list(PSA = seq(0, 160, 0.001)), type="response"))
prostate_mns
g <- simpleScatter(g_prostate, PSA, CAPSULE, title="CAPSULE",
xlab="PSA", ylab="CAPSULE probability")
g
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed")
prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
at=list(GLEASON = seq(0, 10, .001)), type="response"))
prostate_mns_gleason
g <- simpleScatter(g_prostate, GLEASON, CAPSULE, title="CAPSULE",
xlab="GLEASON", ylab="CAPSULE probability")
g
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed")
##EXTRA
prostate_mns2 <- summary(emmeans(b_mod2, "PSA", at=list(PSA = seq(0, 160, 0.001)), type="response"))
mark_prob <- 0.5
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(PSA)
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
prostate_mns2 <- summary(emmeans(b_mod2, "GLEASON", at=list(GLEASON = seq(0, 10, .001)), type="response"))
mark_prob <- 0.5
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(GLEASON)
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
View(prostate_mns)
#Lab11: Multiple Logistic Regression
library(SDSRegressionR)
#Bring in data
prostate <- read.csv("data/prostateData.csv", stringsAsFactors = FALSE)
names(prostate)
#Intially:
table(prostate$CAPSULE)
# #Factoring the categorical variables in the model (but NOT the outcome):
# table(birth$SMOKE)
# birth <- birth %>%
#   mutate(SMOKE_f = factor(SMOKE, levels=c(0,1),
#                           labels=c("Non-smoker", "Smoker")))
#Intital Model
b_mod <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=prostate, family="binomial")
summary(b_mod)
library(car)
vif(b_mod)
cooksPlot(b_mod, key.variable = "PatientID", print.obs = TRUE, sort.obs = TRUE, save.cutoff=TRUE)
cooksCutOff * 3
threeOuts(b_mod, key.variable = "PatientID")
#Get good data...
g_prostate <- prostate %>%
filter(PatientID %not in% c('ID_76', 'ID_89','ID_8'))
#Re-run
b_mod2 <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=g_prostate, family="binomial")
summary(b_mod2)
#Odds-ratios
exp(b_mod2$coef)
exp(confint.default(b_mod2))
#Stats
library(rms)
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
#Examine the variables of interest graphically...
#Look at ranges...
library(skimr)
g_prostate %>%
skim(PSA)
g_prostate %>%
skim(GLEASON)
library(emmeans)
# prostate_mns <- summary(emmeans(b_mod2, "PSA",
#                              at=list(PSA = seq(0, 160, 0.001)), type="response"))
# prostate_mns
#
# g <- simpleScatter(g_prostate, PSA, CAPSULE, title="CAPSULE",
#                    xlab="PSA", ylab="CAPSULE probability")
# g
# g +
#   geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
#   geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
#   geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed")
#
#
# prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
#                                 at=list(GLEASON = seq(0, 10, .001)), type="response"))
# prostate_mns_gleason
#
# g <- simpleScatter(g_prostate, GLEASON, CAPSULE, title="CAPSULE",
#                    xlab="GLEASON", ylab="CAPSULE probability")
# g
# g +
#   geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
#   geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
#   geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed")
##EXTRA
prostate_mns2 <- summary(emmeans(b_mod2, "PSA", at=list(PSA = seq(0, 160, 0.001)), type="response"))
mark_prob <- 0.5
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(PSA)
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
prostate_mns2_gleason <- summary(emmeans(b_mod2, "GLEASON", at=list(GLEASON = seq(0, 10, .001)), type="response"))
mark_prob <- 0.5
ci_marks <- prostate_mns2 %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(GLEASON)
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
source('~/Graduate School/UT-Austin - MSIS/SDS 358 - Applied Regression Analysis/Lab11/Lab11_Logistic.R', echo=TRUE)
g
#Lab11: Multiple Logistic Regression
library(SDSRegressionR)
#Bring in data
prostate <- read.csv("data/prostateData.csv", stringsAsFactors = FALSE)
names(prostate)
#Intially:
table(prostate$CAPSULE)
#Intital Model
b_mod <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=prostate, family="binomial")
summary(b_mod)
library(car)
vif(b_mod)
cooksPlot(b_mod, key.variable = "PatientID", print.obs = TRUE, sort.obs = TRUE, save.cutoff=TRUE)
cooksCutOff * 3
threeOuts(b_mod, key.variable = "PatientID")
#Get good data...
g_prostate <- prostate %>%
filter(PatientID %not in% c('ID_76', 'ID_89','ID_8'))
#Stats
library(rms)
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
#Re-run
b_mod2 <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=g_prostate, family="binomial")
summary(b_mod2)
#Odds-ratios
exp(b_mod2$coef)
exp(confint.default(b_mod2))
#Examine the variables of interest graphically...
#Look at ranges...
library(skimr)
g_prostate %>%
skim(PSA)
g_prostate %>%
skim(GLEASON)
library(emmeans)
prostate_mns <- summary(emmeans(b_mod2, "PSA",
at=list(PSA = seq(0, 160, 0.001)), type="response"))
g <- simpleScatter(g_prostate, PSA, CAPSULE, title="CAPSULE",
xlab="PSA", ylab="CAPSULE probability")
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed")
prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
at=list(GLEASON = seq(0, 10, .001)), type="response"))
g <- simpleScatter(g_prostate, GLEASON, CAPSULE, title="CAPSULE",
xlab="GLEASON", ylab="CAPSULE probability")
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed")
##EXTRA
mark_prob <- 0.5
ci_marks <- prostate_mns %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(PSA)
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
ci_marks_gleason <- prostate_mns_gleason %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(GLEASON)
g +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks_gleason)
#Lab11: Multiple Logistic Regression
library(SDSRegressionR)
#Bring in data
prostate <- read.csv("data/prostateData.csv", stringsAsFactors = FALSE)
names(prostate)
#Intially:
table(prostate$CAPSULE)
#Intital Model
b_mod <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=prostate, family="binomial")
summary(b_mod)
library(car)
vif(b_mod)
cooksPlot(b_mod, key.variable = "PatientID", print.obs = TRUE, sort.obs = TRUE, save.cutoff=TRUE)
cooksCutOff * 3
threeOuts(b_mod, key.variable = "PatientID")
#Get good data...
g_prostate <- prostate %>%
filter(PatientID %not in% c('ID_76', 'ID_89','ID_8'))
#Stats
library(rms)
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
#Re-run
b_mod2 <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=g_prostate, family="binomial")
summary(b_mod2)
#Odds-ratios
exp(b_mod2$coef)
exp(confint.default(b_mod2))
#Examine the variables of interest graphically...
#Look at ranges...
library(skimr)
g_prostate %>%
skim(PSA)
g_prostate %>%
skim(GLEASON)
library(emmeans)
prostate_mns <- summary(emmeans(b_mod2, "PSA",
at=list(PSA = seq(0, 160, 0.001)), type="response"))
g <- simpleScatter(g_prostate, PSA, CAPSULE, title="CAPSULE",
xlab="PSA", ylab="CAPSULE probability")
mark_prob <- 0.5
ci_marks <- prostate_mns %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(PSA)
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
at=list(GLEASON = seq(0, 10, .001)), type="response"))
g_gleason <- simpleScatter(g_prostate, GLEASON, CAPSULE, title="CAPSULE",
xlab="GLEASON", ylab="CAPSULE probability")
ci_marks_gleason <- prostate_mns_gleason %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(GLEASON)
g_gleason +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks_gleason)
summary(emmeans(b_mod2, "PSA",
at=list(CAPSULE = 0.5), type="response"))
emmeans(b_mod2, "PSA",
at=list(CAPSULE = 0.5), type="response")
emmeans(b_mod2, "CAPSULE",
at=list(CAPSULE = 0.5), type="response")
View(prostate_mns)
View(prostate_mns_gleason)
#Lab11: Multiple Logistic Regression
library(SDSRegressionR)
#Bring in data
prostate <- read.csv("data/prostateData.csv", stringsAsFactors = FALSE)
names(prostate)
#Intially:
table(prostate$CAPSULE)
#Intital Model
b_mod <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=prostate, family="binomial")
summary(b_mod)
library(car)
vif(b_mod)
cooksPlot(b_mod, key.variable = "PatientID", print.obs = TRUE, sort.obs = TRUE, save.cutoff=TRUE)
cooksCutOff * 3
threeOuts(b_mod, key.variable = "PatientID")
#Get good data...
g_prostate <- prostate %>%
filter(PatientID %not in% c('ID_76', 'ID_89','ID_8'))
#Stats
library(rms)
b_mod2.2 <- lrm(CAPSULE ~ AGE + PSA + VOL + GLEASON, g_prostate)
b_mod2.2
#Re-run
b_mod2 <- glm(CAPSULE ~ AGE + PSA + VOL + GLEASON, data=g_prostate, family="binomial")
summary(b_mod2)
#Odds-ratios
exp(b_mod2$coef)
exp(confint.default(b_mod2))
#Examine the variables of interest graphically...
#Look at ranges...
library(skimr)
g_prostate %>%
skim(PSA)
g_prostate %>%
skim(GLEASON)
library(emmeans)
prostate_mns <- summary(emmeans(b_mod2, "PSA",
at=list(PSA = seq(0, 160, 0.001)), type="response"))
g <- simpleScatter(g_prostate, PSA, CAPSULE, title="CAPSULE",
xlab="PSA", ylab="CAPSULE probability")
mark_prob <- 0.5
ci_marks <- prostate_mns %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(PSA)
g +
geom_line(data=prostate_mns, aes(x=PSA, y=prob), color="red") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns, aes(x=PSA, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks)
prostate_mns_gleason <- summary(emmeans(b_mod2, "GLEASON",
at=list(GLEASON = seq(0, 10, .001)), type="response"))
g_gleason <- simpleScatter(g_prostate, GLEASON, CAPSULE, title="CAPSULE",
xlab="GLEASON", ylab="CAPSULE probability")
ci_marks_gleason <- prostate_mns_gleason %>%
filter(abs(asymp.LCL - mark_prob) == min(abs(asymp.LCL - mark_prob)) |
abs(asymp.UCL - mark_prob) == min(abs(asymp.UCL - mark_prob))) %>%
pull(GLEASON)
g_gleason +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=prob), color="red") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.LCL), linetype="dashed") +
geom_line(data=prostate_mns_gleason, aes(x=GLEASON, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = ci_marks_gleason)
View(prostate_mns)
View(prostate_mns_gleason)
